# Source oh-my-zsh if it is installed.
if [[ -d $HOME/.oh-my-zsh ]]; then
  # Path to your oh-my-zsh configuration.
  ZSH=$HOME/.oh-my-zsh

  # Set name of the theme to load.
  POWERLEVEL9K_MODE='awesome-fontconfig'
  ZSH_THEME="powerlevel9k/powerlevel9k"
  DEFAULT_USER="sbc"

  # Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
  # Example format: plugins=(rails git textmate ruby lighthouse)
#  plugins=(vi-mode rvm ruby bundler zsh-syntax-highlighting history-substring-search)
  plugins=(git python vi-mode sh-syntax-highlighting history-substring-search pyenv)

  # source every zsh file in user's custom/zsh/before. This is useful for setting theme and plugins.
  if [[ -d ~/.dotfiles/custom/zsh/before ]]; then
    for config_file (~/.dotfiles/custom/zsh/before/*) source $config_file
  fi

  # Figure out if we have Robby's or Sorin's Oh-my-zsh
  if [[ -f $ZSH/oh-my-zsh.sh ]]; then
    source $ZSH/oh-my-zsh.sh # OMZ Robby Russell (https://github.com/robbyrussell/oh-my-zsh)
  else
    source ~/.dotfiles/zsh/omz-sorin/omz-sorin.zsh # OMZ Sorin Ionescu (https://github.com/sorin-ionescu/oh-my-zsh)
  fi
fi

# Configuration
for config_file (~/.dotfiles/zsh/*.zsh) source $config_file

# ------------------
# zsh/after
# ==================
# source every zsh file in user's custom/zsh/after.
if [[ -d ~/.dotfiles/custom/zsh/after ]]; then
  for config_file (~/.dotfiles/custom/zsh/after/*) source $config_file
fi

# Put secret configuration settings in ~/.secrets
if [[ -a ~/.secrets ]] then
  source ~/.secrets
fi

#where all common aliases are
if [[ -a ~/.aliases ]] then
  source  ~/.aliases
fi

if [[ -a  ~/.dotfiles/custom/config ]]; then
  #Additional configuration. I suggest adding PATH in this file
  source ~/.dotfiles/custom/config
fi

if [[ -a ~/.dotfiles/custom/directories ]]; then
  #Aliases for directories
  source ~/.dotfiles/custom/directories
fi

export PATH="/usr/local/bin:/usr/local/sbin:${PATH}:$HOME/bin"
export PATH="/usr/local/php5/bin:${PATH}"
export PATH="/usr/local/share/python:${PATH}"

export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
export PATH="${PATH}:$HOME/anaconda/bin"

export WORKON_HOME=$HOME/.virtualenvs

# Added by the Heroku Toolbelt
export PATH="/usr/local/heroku/bin:$PATH"

export PATH="$PATH:$HOME/.rvm/bin" # Add RVM to PATH for scripting

if which pyenv > /dev/null;
then
  eval "$(pyenv init -)";
  eval "$(pyenv virtualenv-init -)";
fi

export PYENV_VIRTUALENVWRAPPER_PREFER_PYVENV="true"

[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*

export PATH=$PATH:/Users/sbc/.rvm/rubies/ruby-1.9.2-p290/bin:

#/usr/bin:/bin:/usr/sbin:/sbin

stty stop undef
stty start undef
stty -ixon

# Base 16 Shell colors
BASE16_SHELL=$HOME/.config/base16-shell/
[ -n "$PS1" ] && [ -s $BASE16_SHELL/profile_helper.sh ] && eval "$($BASE16_SHELL/profile_helper.sh)"


# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/sbc/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/sbc/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/sbc/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/sbc/google-cloud-sdk/completion.zsh.inc'; fi
export PATH="/usr/local/opt/openssl/bin:$PATH"
